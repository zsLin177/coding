'''
一个整型数组 nums 里除两个数字之外，其他数字都出现了两次。请写程序找出这两个只出现一次的数字。要求时间复杂度是O(n)，空间复杂度是O(1)。
key：
如果只是有一个数字只出现一次，其他数字出现两次，那么就直接异或就ok
但是这里是两个，所以就需要对原来的数组进行分组，分组需要满足相同的分到一组，不同的两个数字在不同的组
先对所有的进行异或得到x，然后找到x的某位为1的位置，根据这个位置去分组，该位为1的是一组，该位为0的是一组。
为啥这样分组就可以呢：首先相同的数字那一位是一样的，所以肯定在一组；然后因为a,b那一位异或结果为1，肯定是不一样，所以就分到了两组。
'''
class Solution:
    def singleNumbers(self, nums):
        x = 0
        for num in nums:
            x = x^num
        m = 1
        while x & m == 0:
            m = m<<1
        
        a, b = 0, 0
        for num in nums:
            if num&m == 0:
                a = a^num
            else:
                b= b^num
        return [a, b]
